import { useAuth } from '../contexts/AuthContext'
import { useRealTimeMenu, useRealTimeInventory } from '../hooks/useRealTimeMenu'

const LiveDashboard = () => {
  const { user } = useAuth()
  const {
    menu,
    eightySixList,
    stats,
    lastUpdate,
    recentChanges,
    getAutoGeneratedEightySix,
    getManualEightySix,
    refreshMenu
  } = useRealTimeMenu()

  const {
    lowStockAlerts,
    hasUnreadAlerts,
    clearAlerts,
    lastInventoryUpdate
  } = useRealTimeInventory()

  const canManageInventory = user?.role && ['chef', 'manager', 'owner'].includes(user.role)
  const canManageMenu = user?.role && ['manager', 'owner'].includes(user.role)

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-slate-100">
      {/* Header */}
      <div className="bg-white shadow-soft border-b border-slate-200">
        <div className="container mx-auto py-6">
          <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
            <div>
              <h1 className="text-3xl sm:text-4xl font-bold text-slate-900">
                Live Dashboard
              </h1>
              <p className="text-slate-600 mt-1">
                Real-time restaurant operations overview
              </p>
            </div>
          </div>
        </div>
      </div>

      <div className="container mx-auto py-6 sm:py-8">
        {/* Status Cards */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">Total Menu Items</p>
                <p className="text-3xl font-bold text-gray-900">{stats.totalItems}</p>
              </div>
              <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                <span className="text-blue-600 text-sm">📋</span>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">Available Items</p>
                <p className="text-3xl font-bold text-green-600">{stats.availableItems}</p>
              </div>
              <div className="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
                <span className="text-green-600 text-sm">✅</span>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">86'd Items</p>
                <p className="text-3xl font-bold text-red-600">{stats.unavailableItems}</p>
              </div>
              <div className="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center">
                <span className="text-red-600 text-sm">🚫</span>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">Auto 86'd</p>
                <p className="text-3xl font-bold text-orange-600">{stats.autoEightySix}</p>
              </div>
              <div className="w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center">
                <span className="text-orange-600 text-sm">🤖</span>
              </div>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Recent Changes */}
          <div className="bg-white rounded-lg shadow">
            <div className="px-6 py-4 border-b">
              <h2 className="text-lg font-semibold text-gray-900">Recent Changes</h2>
              <p className="text-sm text-gray-500">Last updated: {lastUpdate ? new Date(lastUpdate).toLocaleString() : 'Never'}</p>
            </div>
            <div className="p-6">
              {recentChanges.length === 0 ? (
                <p className="text-gray-500 text-center py-8">No recent changes</p>
              ) : (
                <div className="space-y-4">
                  {recentChanges.map((change, index) => (
                    <div key={index} className="flex items-center space-x-3">
                      <div className={`w-2 h-2 rounded-full ${
                        change.type === 'availability' ? 'bg-blue-500' :
                        change.type === 'price' ? 'bg-green-500' : 'bg-orange-500'
                      }`}></div>
                      <div className="flex-1">
                        <p className="text-sm font-medium text-gray-900">{change.itemName}</p>
                        <p className="text-xs text-gray-500">{change.description}</p>
                      </div>
                      <p className="text-xs text-gray-400">{new Date(change.timestamp).toLocaleTimeString()}</p>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>

          {/* Low Stock Alerts */}
          <div className="bg-white rounded-lg shadow">
            <div className="px-6 py-4 border-b flex items-center justify-between">
              <div>
                <h2 className="text-lg font-semibold text-gray-900">Low Stock Alerts</h2>
                <p className="text-sm text-gray-500">Last checked: {lastInventoryUpdate ? new Date(lastInventoryUpdate).toLocaleString() : 'Never'}</p>
              </div>
              {hasUnreadAlerts && (
                <div className="w-3 h-3 bg-red-500 rounded-full animate-pulse"></div>
              )}
            </div>
            <div className="p-6">
              {lowStockAlerts.length === 0 ? (
                <div className="text-center py-8">
                  <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-3">
                    <span className="text-green-600">✅</span>
                  </div>
                  <p className="text-gray-500">All stock levels are good!</p>
                </div>
              ) : (
                <div className="space-y-3">
                  {lowStockAlerts.map((alert, index) => (
                    <div key={index} className="flex items-center justify-between p-3 bg-red-50 rounded-lg">
                      <div>
                        <p className="text-sm font-medium text-red-900">{alert.itemName}</p>
                        <p className="text-xs text-red-600">Current: {alert.currentStock} {alert.unit}</p>
                      </div>
                      <div className="text-right">
                        <p className="text-xs text-red-500">Low Stock</p>
                        <p className="text-xs text-red-400">Min: {alert.minThreshold}</p>
                      </div>
                    </div>
                  ))}
                  {canManageInventory && (
                    <button
                      onClick={clearAlerts}
                      className="w-full mt-4 text-sm text-red-600 hover:text-red-800 font-medium"
                    >
                      Mark All as Read
                    </button>
                  )}
                </div>
              )}
            </div>
          </div>
        </div>

        {/* Auto 86'd Items */}
        <div className="mt-8 bg-white rounded-lg shadow">
          <div className="px-6 py-4 border-b">
            <h2 className="text-lg font-semibold text-gray-900">Auto 86'd Items</h2>
            <p className="text-sm text-gray-500">Items automatically marked as unavailable due to low inventory</p>
          </div>
          <div className="p-6">
            {getAutoGeneratedEightySix().length === 0 ? (
              <p className="text-gray-500 text-center py-4">No auto 86'd items</p>
            ) : (
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {getAutoGeneratedEightySix().map((item) => (
                  <div key={item.id} className="p-4 bg-orange-50 border border-orange-200 rounded-lg">
                    <div className="flex items-center justify-between">
                      <div>
                        <h3 className="font-medium text-orange-900">{item.name}</h3>
                        <p className="text-sm text-orange-600">${item.price}</p>
                      </div>
                      <div className="text-orange-500">
                        <span className="text-lg">🤖</span>
                      </div>
                    </div>
                    <p className="text-xs text-orange-600 mt-2">Auto-disabled due to low inventory</p>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>

        {/* Manual 86'd Items */}
        <div className="mt-8 bg-white rounded-lg shadow">
          <div className="px-6 py-4 border-b flex items-center justify-between">
            <div>
              <h2 className="text-lg font-semibold text-gray-900">Manual 86'd Items</h2>
              <p className="text-sm text-gray-500">Items manually marked as unavailable by staff</p>
            </div>
            <button
              onClick={refreshMenu}
              className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm"
            >
              Refresh
            </button>
          </div>
          <div className="p-6">
            {getManualEightySix().length === 0 ? (
              <p className="text-gray-500 text-center py-4">No manually 86'd items</p>
            ) : (
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {getManualEightySix().map((item) => (
                  <div key={item.id} className="p-4 bg-red-50 border border-red-200 rounded-lg">
                    <div className="flex items-center justify-between">
                      <div>
                        <h3 className="font-medium text-red-900">{item.name}</h3>
                        <p className="text-sm text-red-600">${item.price}</p>
                      </div>
                      <div className="text-red-500">
                        <span className="text-lg">🚫</span>
                      </div>
                    </div>
                    <p className="text-xs text-red-600 mt-2">Manually disabled by staff</p>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>

        {/* Action Buttons */}
        <div className="mt-8 flex flex-col sm:flex-row gap-4">
          {canManageMenu && (
            <a
              href="/dashboard/menu"
              className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium text-center"
            >
              🍽️ Manage Menu
            </a>
          )}
          
          {canManageInventory && (
            <a
              href="/dashboard/inventory"
              className="px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors"
            >
              📦 Manage Inventory
            </a>
          )}
        </div>
      </div>
    </div>
  )
}

export default LiveDashboard
